name: Build And Publish Image

on:
  pull_request:
    branches:
      - main
      - develop
    types: [opened, closed, synchronize]
  release:
    types: [published]
  workflow_dispatch:


jobs:
  setup_tag:
    name: Setup dockerTag
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.setup_docker_tag.outputs.DockerTag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dockerTag
        id: setup_docker_tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" != "closed" ]]; then
            case "${{ github.base_ref }}" in
              "develop")
                echo "::set-output name=DockerTag::dev-pr"
                ;;
              "main")
                echo "::set-output name=DockerTag::main-pr"
                ;;
            esac
          else
            case "${{ github.ref }}" in
              "refs/heads/develop")
                echo "::set-output name=DockerTag::dev"
                ;;
              "refs/heads/main")
                echo "::set-output name=DockerTag::rc"
                ;;
              "refs/tags/*")
                echo "::set-output name=DockerTag::release"
                ;;
            esac
          fi
  
  build_project:
    name: install dependencies and build
    runs-on: ubuntu-latest
      
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Install Node.js
          uses: actions/setup-node@v3
        with:
          node-version: 21.7.2
          registry-url: https://npm.pkg.github.com/

        - name: Install dependencies
          run: npm install --force

        - name: Build project
          run: npm run build

        -name: Archive compiled files
          uses: actions/upload-artifact@v3
          with:
            name: compiled_files
            path: ./.next

    CI:
      name: Building and deploy Image
      runs-on: ubuntu-latest
      needs: [setup_tag, build_project]
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Dowload compiled files artifact
          uses: actions/download-artifact@v3
          with:
            name: compiled_files
            path: ./.next
        
        - name: DockerHub login
          uses: docker/login-action@v3.2.0
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.FROMA2B }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Build and push
           run: docker buildx build --platform linux/amd64,linux/arm --file ./Dockerfile --tag ghcr.io/from-a2b-map:${{ needs.setup_tag.outputs.docker_tag }} --push .

      - name: build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm
          tags: ghcr.io/from-a2b-map:${{ needs.setup_tag.outputs.docker_tag }}
          push: true
